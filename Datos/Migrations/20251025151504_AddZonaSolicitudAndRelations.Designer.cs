// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Datos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251025151504_AddZonaSolicitudAndRelations")]
    partial class AddZonaSolicitudAndRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.Barra", b =>
                {
                    b.Property<int>("IdBarra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBarra"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioPorHora")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoBebida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBarra");

                    b.ToTable("Barras");
                });

            modelBuilder.Entity("Entidades.BarraSolicitud", b =>
                {
                    b.Property<int>("IdBarraSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBarraSolicitud"));

                    b.Property<int>("IdBarra")
                        .HasColumnType("int");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.HasKey("IdBarraSolicitud");

                    b.HasIndex("IdBarra");

                    b.HasIndex("IdSolicitud");

                    b.ToTable("BarraSolicitudes");
                });

            modelBuilder.Entity("Entidades.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Entidades.Dj", b =>
                {
                    b.Property<int>("IdDj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDj"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Foto")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("MontoDj")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreArtistico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDj");

                    b.HasIndex("NombreArtistico")
                        .IsUnique();

                    b.ToTable("Djs");
                });

            modelBuilder.Entity("Entidades.DjSolicitud", b =>
                {
                    b.Property<int>("IdDjSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDjSolicitud"));

                    b.Property<int>("IdDj")
                        .HasColumnType("int");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.HasKey("IdDjSolicitud");

                    b.HasIndex("IdDj");

                    b.HasIndex("IdSolicitud");

                    b.ToTable("DjSolicitudes");
                });

            modelBuilder.Entity("Entidades.GastroSolicitud", b =>
                {
                    b.Property<int>("IdGastroSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGastroSolicitud"));

                    b.Property<int>("IdGastro")
                        .HasColumnType("int");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.HasKey("IdGastroSolicitud");

                    b.HasIndex("IdGastro");

                    b.HasIndex("IdSolicitud");

                    b.ToTable("GastroSolicitudes");
                });

            modelBuilder.Entity("Entidades.Gastronomico", b =>
                {
                    b.Property<int>("IdGastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGastro"));

                    b.Property<string>("Foto")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("MontoG")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoComida")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdGastro");

                    b.ToTable("Gastronomicos");
                });

            modelBuilder.Entity("Entidades.Salon", b =>
                {
                    b.Property<int>("IdSalon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSalon"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontoSalon")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreSalon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSalon");

                    b.ToTable("Salones");
                });

            modelBuilder.Entity("Entidades.SalonSolicitud", b =>
                {
                    b.Property<int>("IdSalonSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSalonSolicitud"));

                    b.Property<int>("IdSalon")
                        .HasColumnType("int");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.HasKey("IdSalonSolicitud");

                    b.HasIndex("IdSalon");

                    b.HasIndex("IdSolicitud");

                    b.ToTable("SalonSolicitudes");
                });

            modelBuilder.Entity("Entidades.Solicitud", b =>
                {
                    b.Property<int>("IdSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSolicitud"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaDesde")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoBarra")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoDJ")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoGastro")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoSalon")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdSolicitud");

                    b.HasIndex("IdCliente");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("NombreUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Entidades.Zona", b =>
                {
                    b.Property<int>("IdZona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZona"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdZona");

                    b.ToTable("Zonas");
                });

            modelBuilder.Entity("Entidades.ZonaBarra", b =>
                {
                    b.Property<int>("IdZonaBarra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZonaBarra"));

                    b.Property<int>("IdBarra")
                        .HasColumnType("int");

                    b.Property<int>("IdZona")
                        .HasColumnType("int");

                    b.HasKey("IdZonaBarra");

                    b.HasIndex("IdBarra");

                    b.HasIndex("IdZona");

                    b.ToTable("ZonaBarras");
                });

            modelBuilder.Entity("Entidades.ZonaDJ", b =>
                {
                    b.Property<int>("IdZonaDJ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZonaDJ"));

                    b.Property<int>("IdDj")
                        .HasColumnType("int");

                    b.Property<int>("IdZona")
                        .HasColumnType("int");

                    b.HasKey("IdZonaDJ");

                    b.HasIndex("IdDj");

                    b.HasIndex("IdZona");

                    b.ToTable("ZonaDJs");
                });

            modelBuilder.Entity("Entidades.ZonaGastro", b =>
                {
                    b.Property<int>("IdZonaGastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZonaGastro"));

                    b.Property<int>("IdGastro")
                        .HasColumnType("int");

                    b.Property<int>("IdZona")
                        .HasColumnType("int");

                    b.HasKey("IdZonaGastro");

                    b.HasIndex("IdGastro");

                    b.HasIndex("IdZona");

                    b.ToTable("ZonaGastros");
                });

            modelBuilder.Entity("Entidades.ZonaSalon", b =>
                {
                    b.Property<int>("IdZonaSalon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZonaSalon"));

                    b.Property<int>("IdSalon")
                        .HasColumnType("int");

                    b.Property<int>("IdZona")
                        .HasColumnType("int");

                    b.HasKey("IdZonaSalon");

                    b.HasIndex("IdSalon");

                    b.HasIndex("IdZona");

                    b.ToTable("ZonaSalones");
                });

            modelBuilder.Entity("Entidades.BarraSolicitud", b =>
                {
                    b.HasOne("Entidades.Barra", "Barra")
                        .WithMany("BarraSolicitudes")
                        .HasForeignKey("IdBarra")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entidades.Solicitud", "Solicitud")
                        .WithMany("BarraSolicitudes")
                        .HasForeignKey("IdSolicitud")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Barra");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Entidades.DjSolicitud", b =>
                {
                    b.HasOne("Entidades.Dj", "Dj")
                        .WithMany("DjSolicitudes")
                        .HasForeignKey("IdDj")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entidades.Solicitud", "Solicitud")
                        .WithMany("DjSolicitudes")
                        .HasForeignKey("IdSolicitud")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dj");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Entidades.GastroSolicitud", b =>
                {
                    b.HasOne("Entidades.Gastronomico", "Gastronomico")
                        .WithMany("GastroSolicitudes")
                        .HasForeignKey("IdGastro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entidades.Solicitud", "Solicitud")
                        .WithMany("GastroSolicitudes")
                        .HasForeignKey("IdSolicitud")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gastronomico");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Entidades.SalonSolicitud", b =>
                {
                    b.HasOne("Entidades.Salon", "Salon")
                        .WithMany("SalonSolicitudes")
                        .HasForeignKey("IdSalon")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entidades.Solicitud", "Solicitud")
                        .WithMany("SalonSolicitudes")
                        .HasForeignKey("IdSolicitud")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Salon");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Entidades.Solicitud", b =>
                {
                    b.HasOne("Entidades.Cliente", "Cliente")
                        .WithMany("Solicitudes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Entidades.ZonaBarra", b =>
                {
                    b.HasOne("Entidades.Barra", "Barra")
                        .WithMany("ZonaBarras")
                        .HasForeignKey("IdBarra")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entidades.Zona", "Zona")
                        .WithMany("ZonaBarras")
                        .HasForeignKey("IdZona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Barra");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("Entidades.ZonaDJ", b =>
                {
                    b.HasOne("Entidades.Dj", "Dj")
                        .WithMany("ZonaDJs")
                        .HasForeignKey("IdDj")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entidades.Zona", "Zona")
                        .WithMany("ZonaDJs")
                        .HasForeignKey("IdZona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dj");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("Entidades.ZonaGastro", b =>
                {
                    b.HasOne("Entidades.Gastronomico", "Gastronomico")
                        .WithMany("ZonaGastros")
                        .HasForeignKey("IdGastro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entidades.Zona", "Zona")
                        .WithMany("ZonaGastros")
                        .HasForeignKey("IdZona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gastronomico");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("Entidades.ZonaSalon", b =>
                {
                    b.HasOne("Entidades.Salon", "Salon")
                        .WithMany("ZonaSalones")
                        .HasForeignKey("IdSalon")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entidades.Zona", "Zona")
                        .WithMany("ZonaSalones")
                        .HasForeignKey("IdZona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Salon");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("Entidades.Barra", b =>
                {
                    b.Navigation("BarraSolicitudes");

                    b.Navigation("ZonaBarras");
                });

            modelBuilder.Entity("Entidades.Cliente", b =>
                {
                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("Entidades.Dj", b =>
                {
                    b.Navigation("DjSolicitudes");

                    b.Navigation("ZonaDJs");
                });

            modelBuilder.Entity("Entidades.Gastronomico", b =>
                {
                    b.Navigation("GastroSolicitudes");

                    b.Navigation("ZonaGastros");
                });

            modelBuilder.Entity("Entidades.Salon", b =>
                {
                    b.Navigation("SalonSolicitudes");

                    b.Navigation("ZonaSalones");
                });

            modelBuilder.Entity("Entidades.Solicitud", b =>
                {
                    b.Navigation("BarraSolicitudes");

                    b.Navigation("DjSolicitudes");

                    b.Navigation("GastroSolicitudes");

                    b.Navigation("SalonSolicitudes");
                });

            modelBuilder.Entity("Entidades.Zona", b =>
                {
                    b.Navigation("ZonaBarras");

                    b.Navigation("ZonaDJs");

                    b.Navigation("ZonaGastros");

                    b.Navigation("ZonaSalones");
                });
#pragma warning restore 612, 618
        }
    }
}
